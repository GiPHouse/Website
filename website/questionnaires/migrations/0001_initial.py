# Generated by Django 2.2.5 on 2019-09-13 19:55

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('registrations', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer_about_user', to='registrations.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('available_from', models.DateTimeField(default=django.utils.timezone.now, help_text='The moment from which the questionnaire is available.')),
                ('available_until_soft', models.DateTimeField(help_text='Soft deadline to submit the questionnaire, after this the submission is marked as late.')),
                ('available_until_hard', models.DateTimeField(help_text='Hard deadline to submit the questionnaire. No submissions possible after this date.')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Semester')),
            ],
            options={
                'ordering': ['-available_until_hard', '-available_until_soft', '-available_from'],
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('late', models.BooleanField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registrations.Student')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.Questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('question_type', models.PositiveSmallIntegerField(choices=[(0, 'Open question'), (1, 'Poor/good Likert scale'), (2, 'Disagree/agree Likert scale')])),
                ('about_team_member', models.BooleanField(default=False)),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.Questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='QualityAnswerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(choices=[(1, 'Very Poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Very Good')])),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qualityanswerdata', to='questionnaires.Answer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpenAnswerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.Answer')),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireSubmission'),
        ),
        migrations.CreateModel(
            name='AgreementAnswerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(choices=[(1, 'Strongly Disagree'), (2, 'Disagree'), (3, 'Neutral'), (4, 'Agree'), (5, 'Strongly Agree')])),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agreementanswerdata', to='questionnaires.Answer')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
